version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: nfc_equipment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nfc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/nfc_equipment"
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
      JWT_EXPIRES_IN: "7d"
      NODE_ENV: "production"
      PORT: 5000
      FRONTEND_URL: "http://localhost:3000"
      BCRYPT_ROUNDS: 10
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW: 900000
      CORS_ORIGINS: "http://localhost:3000,http://frontend:3000"
      LOG_LEVEL: "info"
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nfc_network
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: "http://localhost:5000"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - nfc_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  nfc_network:
    driver: bridge